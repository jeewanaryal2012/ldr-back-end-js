{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth-guard.service.ts","webpack:///src/app/_helpers/jwt-interceptor.service.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/nav/nav.component.ts","webpack:///src/app/common/nav/nav.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuardService","router","authenticationService","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","providedIn","JwtInterceptorService","request","next","token","clone","setHeaders","Authorization","handle","AuthenticationService","http","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","username","password","post","pipe","user","setItem","stringify","removeItem","value","routes","path","loadChildren","m","HomeModule","canActivate","LoginModule","RegisterModule","AppRoutingModule","forRoot","imports","AppComponent","title","subscribe","console","log","err","logout","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","NavComponent","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // authorised so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService {\n\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(username: string, password: string) {\n    return this.http.post<any>(`/users/authenticate`, { username, password })\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', JSON.stringify(user));\n          this.currentUserSubject.next(user);\n        }\n\n        return user;\n      }));\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardService } from './_helpers/auth-guard.service';\n\n\nconst routes: Routes = [\n  {\n    path: '', loadChildren: () => import('./components/home/home.module').then(m => m.HomeModule),\n    canActivate: [AuthGuardService]\n  },\n  { path: 'login', loadChildren: () => import('./components/login/login.module').then(m => m.LoginModule) },\n  { path: 'register', loadChildren: () => import('./components/register/register.module').then(m => m.RegisterModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services/authentication.service';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'cvd-cleaners';\n  currentUser: User;\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(user => {\n      console.log(user);\n      return this.currentUser = user;\n    }, err => { });\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<app-nav *ngIf=\"currentUser\"></app-nav>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptorService } from './_helpers/jwt-interceptor.service';\nimport { NavComponent } from './common/nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptorService, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  exports: [NavComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"nav-wrapper container-fullwidth\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <nav class=\"navbar navbar-expand-lg\">\n        <a class=\"navbar-brand\" href=\"#\">LOGO</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"#\">CVD Cleaners</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">My Ad</a>\n            </li>\n          </ul>\n          <div class=\"form-inline my-2 my-lg-0\">\n            <ul class=\"navbar-nav mr-auto\">\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"#\">Hello, Jeewan</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Logout</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}