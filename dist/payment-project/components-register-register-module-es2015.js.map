{"version":3,"sources":["./src/app/components/register/register-routing.module.ts","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEE;;;AAEzD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE,CAAC,CAAC;AAM7D,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAHvB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,qBAAqB,uFAFtB,4DAAY;6FAEX,qBAAqB;cAJjC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;;;;;;;;;ICuCxD,sEAA2E;;AD7BhF,MAAM,iBAAiB;IAK5B,YACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,qBAA4C;QAH5C,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAPtD,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAQhB,IAAI,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjC,CAAC,CAAC;QAEH,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACvE,CAAC;IAED,QAAQ,CAAC,CAAC;QACR,CAAC,CAAC,cAAc,EAAE,CAAC;IACrB,CAAC;;kFAhCU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,0EACE;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,qEAAU;QAAA,4DAAY;QACjC,uEACF;QAAA,4DAAiB;QAEnB,4DAAM;QACN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,uEACF;QAAA,4DAAiB;QAEnB,4DAAM;QACN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,uEACF;QAAA,4DAAiB;QAEnB,4DAAM;QACN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,wEACF;QAAA,4DAAiB;QAEnB,4DAAM;QACN,2EACE;QAAA,8EACE;QADgD,gJAAS,oBAAgB,IAAC;QAC1E,kHAAoE;QACpE,sEACF;QAAA,4DAAS;QACT,8EACE;QAAA,yEAA2C;QAAA,iEAAK;QAAA,4DAAI;QACtD,4DAAS;QAGX,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAbY,2DAAoB;QAApB,iFAAoB;QACpB,0DAAe;QAAf,6EAAe;QAGf,0DAAoB;QAApB,iFAAoB;;6FDhCzB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEmB;AACT;AACS;AACT;;AAalD,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAPhB;YACP,4DAAY;YACZ,8EAAqB;YACrB,+EAAkB;YAClB,sEAAc;SACf;mIAEU,cAAc,mBARV,qEAAiB,aAE9B,4DAAY;QACZ,8EAAqB;QACrB,+EAAkB;QAClB,sEAAc;6FAGL,cAAc;cAT1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,qEAAiB,CAAC;gBACjC,OAAO,EAAE;oBACP,4DAAY;oBACZ,8EAAqB;oBACrB,+EAAkB;oBAClB,sEAAc;iBACf;aACF","file":"components-register-register-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [{ path: '', component: RegisterComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../../_services/authentication.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      repeatPassword: ['', Validators.required],\n      phone: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n  }\n\n}\n","<div class=\"login-form-wrapper container container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h2>Register</h2>\n      <form formGroup=\"loginForm\" class=\"login-form\">\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n            <mat-label>First Name</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"firstName\" autocomplete=\"off\">\n          </mat-form-field>\n\n        </div>\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n            <mat-label>Last Name</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"lastName\" autocomplete=\"off\">\n          </mat-form-field>\n\n        </div>\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n            <mat-label>Email</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"email\" autocomplete=\"off\">\n          </mat-form-field>\n\n        </div>\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n            <mat-label>Password</mat-label>\n            <input type=\"password\" matInput placeholder=\"Placeholder\" formControlName=\"password\">\n          </mat-form-field>\n        </div>\n        <div class=\"form-group\">\n          <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n            <mat-label>Repeat Password</mat-label>\n            <input matInput placeholder=\"Placeholder\" formControlName=\"repeatPassword\" autocomplete=\"off\">\n          </mat-form-field>\n\n        </div>\n        <div class=\"form-group p-3\">\n          <button [disabled]=\"loading\" class=\"btn btn-link\" (click)=\"onSubmit($event)\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Register\n          </button>\n          <button [disabled]=\"loading\" class=\"btn btn-link\">\n            <a routerLink=\"/login\" routerLinkActive=\"\">Login</a>\n          </button>\n          <!-- <a routerLink=\"/\" routerLinkActive=\"\" (click)=\"onSubmit($event)\">Login</a>\n          <a routerLink=\"/register\" routerLinkActive=\"\">Register</a> -->\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    MatFormFieldModule,\n    MatInputModule\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///"}